{
  //=====
  // The below is what needs to be added to package.json to have it properly run the syntaxes. But for now they are not needed and adding them as comments to the package.json wigs vscode out for some reason.
  // "languages": [
  //   {
  //     "id": "enzo",
  //     "aliases": ["enzo", "ENZO"],
  //     "configuration": "./language-configuration.json"
  //   }
  // ],
  // "grammars": [
  //   {
  //     "language": "enzo",
  //     "path": "./syntaxes/html.enzo.json",
  //     "scopeName": "text.enzo",
  //     "injectTo": ["text.html"]
  //   }
  // ],

  ///====
  "scopeName": "text.enzo",
  "uuid": "17994EC8-6B1D-11D9-AC3A-000D93589AF6",
  "version": "https://github.com/textmate/html.tmbundle/commit/9f812c89f4990a98391701caa77824c94860538f",
  "fileTypes": ["html", "htm", "shtml", "xhtml", "inc", "tmpl", "tpl"],
  "firstLineMatch": "<(?i:(!DOCTYPE\\s*)?html)",
  "injections": {
    "R:text.html - comment.block": {
      "comment": "Use R: to ensure this matches after any other injections.",
      "patterns": [
        {
          "match": "<",
          "name": "invalid.illegal.bad-angle-bracket.html"
        }
      ]
    }
  },
  "injectionSelector": "L:text.html",
  "keyEquivalent": "^~H",
  "name": "HTML",
  "patterns": [
    {
      "begin": "(<(?!\\?php|\\!|/))(\\w+)([\\s\\S]*?)(>(?=/?))",
      "beginCaptures": {
        "1": {
          "name": "html.enzo.tag.start.opening"
        },
        "2": {
          "name": "html.enzo.tag.name.opening"
        },
        "3": {
          "name": "html.enzo.tag.attributes.opening"
        },
        "4": {
          "name": "html.enzo.tag.end.opening"
        }
      },
      "end": "(<\\/)(\\w+)(>)",
      "endCaptures": {
        "1": {
          "name": "html.enzo.tag.start.closing"
        },
        "2": {
          "name": "html.enzo.tag.name.closing"
        },
        "3": {
          "name": "html.enzo.tag.end.closing"
        }
      },
      "name": "test.html.enzo",
      "patterns": [
        {
          "include": "#tag-stuff"
        }
      ]
    }
  ],
  "repository": {
    "embedded-code": {
      "patterns": [
        {
          "include": "#smarty"
        },
        {
          "include": "#python"
        }
      ]
    },
    "entities": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.entity.html"
            },
            "3": {
              "name": "punctuation.definition.entity.html"
            }
          },
          "match": "(&)([a-zA-Z0-9]+|#[0-9]+|#[xX][0-9a-fA-F]+)(;)",
          "name": "constant.character.entity.html"
        },
        {
          "match": "&",
          "name": "invalid.illegal.bad-ampersand.html"
        }
      ]
    },
    "python": {
      "begin": "(?:^\\s*)<\\?python(?!.*\\?>)",
      "end": "\\?>(?:\\s*$\\n)?",
      "contentName": "source.python.embedded.html",
      "patterns": [
        {
          "include": "source.python"
        }
      ]
    },
    "smarty": {
      "patterns": [
        {
          "begin": "(\\{(literal)\\})",
          "captures": {
            "1": {
              "name": "source.smarty.embedded.html"
            },
            "2": {
              "name": "support.function.built-in.smarty"
            }
          },
          "end": "(\\{/(literal)\\})"
        },
        {
          "begin": "{{|{",
          "disabled": 1,
          "end": "}}|}",
          "contentName": "source.smarty.embedded.html",
          "patterns": [
            {
              "include": "source.smarty"
            }
          ]
        }
      ]
    },
    "string-double-quoted": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.html"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.html"
        }
      },
      "name": "string.quoted.double.html",
      "patterns": [
        {
          "include": "#embedded-code"
        },
        {
          "include": "#entities"
        }
      ]
    },
    "string-single-quoted": {
      "begin": "'",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.html"
        }
      },
      "end": "'",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.html"
        }
      },
      "name": "string.quoted.single.html",
      "patterns": [
        {
          "include": "#embedded-code"
        },
        {
          "include": "#entities"
        }
      ]
    },
    "tag-generic-attribute": {
      "match": "(?<=[^=])\\b([a-zA-Z0-9:-]+)",
      "name": "entity.other.attribute-name.html"
    },
    "tag-id-attribute": {
      "begin": "\\b(id)\\b\\s*(=)",
      "captures": {
        "1": {
          "name": "entity.other.attribute-name.id.html"
        },
        "2": {
          "name": "punctuation.separator.key-value.html"
        }
      },
      "end": "(?!\\G)(?<='|\"|[^\\s<>/])",
      "name": "meta.attribute-with-value.id.html",
      "patterns": [
        {
          "begin": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.html"
            }
          },
          "contentName": "meta.toc-list.id.html",
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.html"
            }
          },
          "name": "string.quoted.double.html",
          "patterns": [
            {
              "include": "#embedded-code"
            },
            {
              "include": "#entities"
            }
          ]
        },
        {
          "begin": "'",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.html"
            }
          },
          "contentName": "meta.toc-list.id.html",
          "end": "'",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.html"
            }
          },
          "name": "string.quoted.single.html",
          "patterns": [
            {
              "include": "#embedded-code"
            },
            {
              "include": "#entities"
            }
          ]
        },
        {
          "captures": {
            "0": {
              "name": "meta.toc-list.id.html"
            }
          },
          "match": "(?<==)(?:[^\\s<>/'\"]|/(?!>))+",
          "name": "string.unquoted.html"
        }
      ]
    },
    "tag-stuff": {
      "patterns": [
        {
          "include": "#tag-id-attribute"
        },
        {
          "include": "#tag-generic-attribute"
        },
        {
          "include": "#string-double-quoted"
        },
        {
          "include": "#string-single-quoted"
        },
        {
          "include": "#embedded-code"
        },
        {
          "include": "#unquoted-attribute"
        }
      ]
    },
    "unquoted-attribute": {
      "match": "(?<==)(?:[^\\s<>/'\"]|/(?!>))+",
      "name": "string.unquoted.html"
    }
  }
}
